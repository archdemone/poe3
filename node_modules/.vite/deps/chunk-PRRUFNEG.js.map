{
  "version": 3,
  "sources": ["../../../dev/core/src/Misc/instantiationTools.ts"],
  "sourcesContent": ["import { Logger } from \"./logger\";\r\nimport { GetClass } from \"./typeStore\";\r\n\r\n/**\r\n * Class used to enable instantiation of objects by class name\r\n */\r\nexport class InstantiationTools {\r\n    /**\r\n     * Use this object to register external classes like custom textures or material\r\n     * to allow the loaders to instantiate them\r\n     */\r\n    public static RegisteredExternalClasses: { [key: string]: object } = {};\r\n\r\n    /**\r\n     * Tries to instantiate a new object from a given class name\r\n     * @param className defines the class name to instantiate\r\n     * @returns the new object or null if the system was not able to do the instantiation\r\n     */\r\n    public static Instantiate(className: string): any {\r\n        if (this.RegisteredExternalClasses && this.RegisteredExternalClasses[className]) {\r\n            return this.RegisteredExternalClasses[className];\r\n        }\r\n\r\n        const internalClass = GetClass(className);\r\n        if (internalClass) {\r\n            return internalClass;\r\n        }\r\n\r\n        Logger.Warn(className + \" not found, you may have missed an import.\");\r\n\r\n        const arr = className.split(\".\");\r\n\r\n        let fn: any = window || this;\r\n        for (let i = 0, len = arr.length; i < len; i++) {\r\n            fn = fn[arr[i]];\r\n        }\r\n\r\n        if (typeof fn !== \"function\") {\r\n            return null;\r\n        }\r\n\r\n        return fn;\r\n    }\r\n}\r\n"],
  "mappings": ";;;;;;;;AAMM,IAAO,qBAAP,MAAyB;;;;;;EAYpB,OAAO,YAAY,WAAiB;AACvC,QAAI,KAAK,6BAA6B,KAAK,0BAA0B,SAAS,GAAG;AAC7E,aAAO,KAAK,0BAA0B,SAAS;IACnD;AAEA,UAAM,gBAAgB,SAAS,SAAS;AACxC,QAAI,eAAe;AACf,aAAO;IACX;AAEA,WAAO,KAAK,YAAY,4CAA4C;AAEpE,UAAM,MAAM,UAAU,MAAM,GAAG;AAE/B,QAAI,KAAU,UAAU;AACxB,aAAS,IAAI,GAAG,MAAM,IAAI,QAAQ,IAAI,KAAK,KAAK;AAC5C,WAAK,GAAG,IAAI,CAAC,CAAC;IAClB;AAEA,QAAI,OAAO,OAAO,YAAY;AAC1B,aAAO;IACX;AAEA,WAAO;EACX;;AA/Bc,mBAAA,4BAAuD,CAAA;",
  "names": []
}
